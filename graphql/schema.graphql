# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type HealthResponse {
  status: String!
  info: JSONObject
  error: JSONObject
  details: JSONObject
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject

type OrderStatusEntity {
  id: Int!

  """Name of the order status."""
  name: String!
}

type PaymentTypeEntity {
  id: Int!

  """Name of the payment type."""
  name: String!
}

type StoreEntity {
  """Identifier of the record"""
  id: ID!

  """Date of creation of the record."""
  createdAt: String!

  """Date of the last update of the record."""
  updatedAt: String!

  """Name of the store."""
  name: String!

  """Url of the e-commerce of the store."""
  ecommerceUrl: String

  """Date of removal of the store."""
  deletedAt: String
}

type OrderEntity {
  """Identifier of the record"""
  id: ID!

  """Date of creation of the record."""
  createdAt: String!

  """Date of the last update of the record."""
  updatedAt: String!

  """Total value of order."""
  total: Float!

  """Freight value for the order."""
  freightValue: Float!

  """Discount value for the order."""
  discount: Float!

  """Origin of the order. Example: web."""
  origin: String!

  """Date when the order was paid."""
  paidAt: String

  """Date when the order was canceled."""
  canceledAt: String

  """Date when the order was refunded."""
  refundedAt: String

  """Date of removal of the order."""
  deletedAt: String

  """Payment type of the order."""
  paymentType: PaymentTypeEntity!

  """Status of the order."""
  orderStatus: OrderStatusEntity!

  """Store where the order was generated."""
  store: StoreEntity!
}

type SimpleResponse {
  message: String!
}

type Query {
  health: HealthResponse!
  sayHello: String!

  """
  Get a list of orders. The list will be paginated and can be sorted and filtered.
  """
  getOrders(
    filter: OrderFilterDto

    """Number of active page"""
    page: Int

    """Size of items of pagination"""
    pageSize: Int
  ): [OrderEntity!]!

  """Get a specific order, searching by id."""
  getOrderById(id: Float!): OrderEntity
  getStoreById(id: Float!): StoreEntity
}

"""Filterable columns for orders list."""
input OrderFilterDto {
  """Origin of the order."""
  origin: String

  """Payment type of the order."""
  paymentTypeId: Float

  """Status of the order."""
  orderStatusId: Float

  """Store from where the order came."""
  storeId: Float
}

type Mutation {
  """Create a new order."""
  createOrder(data: CreateOrderDto!): OrderEntity!

  """Update a order."""
  updateOrder(id: Float!, data: UpdateOrderDto!): OrderEntity!

  """Cancel a order."""
  cancelOrder(id: Float!): OrderEntity!

  """Refund a order."""
  refundOrder(id: Float!): OrderEntity!

  """Delete a order."""
  deleteOrder(id: Float!): SimpleResponse!
  createStore(data: CreateStoreDto!): StoreEntity!
  updateStore(id: Float!, data: UpdateStoreDto!): StoreEntity!
  deleteStore(id: Float!): SimpleResponse!
}

"""Fields to create a new order."""
input CreateOrderDto {
  total: Float!
  freightValue: Float!
  discount: Float!
  origin: String!
  paymentTypeId: Float!
  storeId: Float!
}

"""Fields to update a order."""
input UpdateOrderDto {
  total: Float
  freightValue: Float
  discount: Float
  origin: String
  paymentTypeId: Float
  storeId: Float
}

input CreateStoreDto {
  name: String!
  ecommerceUrl: String!
}

input UpdateStoreDto {
  name: String
  ecommerceUrl: String
}